# In DNA strings, symbols 'A' and 'T' are complements of each other, as are 'C' and 'G'.

# The reverse complement of a DNA string s
#  is the string sc
#  formed by reversing the symbols of s
# , then taking the complement of each symbol (e.g., the reverse complement of "GTCA" is "TGAC").

# Given: A DNA string s
#  of length at most 1000 bp.

# Return: The reverse complement sc
#  of s
# .
from itertools import permutations

def complement(dna_seq):

    """Takes a string of a dna sequence and reverse complements it"""

    nts = {'A': "T", 'T': 'A', 'C':'G', 'G':'C'}
    reverse = dna_seq[::-1]
    rev_comp = ''
    for char in reverse:
        rev_comp += nts[char]
    return rev_comp

if __name__ == "__main__":

    assert complement('A') == 'T'

    assert complement('AAAACCCGGT') == 'ACCGGGTTTT'

    print('All tests passed')

    rc = complement('GGCGACGTTGCCAAGTGGGATTGGTCTCAGGCACACGTCTCATCGTTCCTTTTTTGCTGCCATCGTCCGACGTCGAACTTTGCTAGTTACAAACAAGCACTAGAGAAGCTACATCGCTATCGCATTGCCAAGCCTCATTAGCATCCAAAAAATCGCACCAAGTGCCTATACTGGGCAATGTCAGATATGTCCACAAGCTCTGGGATCGCGGTATCAAAAAATATAGAGCCCGATTCAGGGGGACTCGTCTTCACAGCCAACATAAGTGATATGACATCCGCGTTAGGGAGGTCCTATCATTGAATAGACCAGTTTCGGGAATTGTATAGAGTGGCAATTATGTCTACACCTTTGCCGGGCCATTGCCACGGCGATGGGGTCGTCCATACTCCATCTAAGTTTTTTAGCCATCAAGCCGGTTGGAGTTATTGGCACTGAGGTAGCGAGCGATTATTAACCGAAAATCTCTTTATTACACTCCTTGAACGTATCCCCCCTACGAATGAGCCTGCCCCCCATTTGGTAGAAACAAATTGCTGCGTAGATCATCCTACAGATCCATACCTCAGGACACGTCGGTCAAGTGCAATTGGAGAGCAAGCACGCGTCGTATGCTTCTCATCTCCGATATCCCCTACTAAGAAGTCGCGAGATAGCTTGAATAGACTCTATGCGAGACCACCGTTGCCTCGGATGCGGCTCTCCTTACACCTAGTCCTTTACGTGAGATCATCAGTATCCCGACACCAAGCTATATCTCCGACGAACTATAGCGACAGCAACACTAAGTACGAGGGTTGTCGTGAGCGCCGAGA')
    print(rc)

