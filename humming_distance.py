# Given two strings s
#  and t
#  of equal length, the Hamming distance between s
#  and t
# , denoted dH(s,t)
# , is the number of corresponding symbols that differ in s
#  and t
# . See Figure 2.

# Given: Two DNA strings s
#  and t
#  of equal length (not exceeding 1 kbp).

# Return: The Hamming distance dH(s,t)
# .


def humming_count(seq1, seq2):

    """"Takes sequence 1 and sequence 2 compares them base by base and finds the Humming
    distance between them by counting the number of base mismatches. Both strings are the same lengths"""

    h_count = 0
    for i in range(len(seq1)):
        if seq1[i] != seq2[i]:
            h_count += 1
    return h_count


if __name__ == "__main__":

    assert humming_count('AAT', 'AAA') == 1

    assert humming_count('GAGCCTACTAACGGGAT', 'CATCGTAATGACGGCCT') == 7

    print('All tests passed')

    res = humming_count('GGGCCATTAGATTAAAGGCAGAATGACTTTAATCAGAGGTCCAAGATACTTTTGAAGAGGAAGCTCCGTCTTTGACTTTATTTTCACTGCGGCCCGAACAGCGCGAGGGTATGCGCATTATACACTCCTTGACCATGACCGCCAGCTATGCCTGGATAAACACCATGACGCCCATACTTTCAATTCCCATACCCAAGCGGAGGATGCTCAAGGCCTGGGCGACCGATGTTAGAGGAGGAGTGCCTAGTTTCTAAGCTCCCTGCCAAGCTTAATATCATCGCAGGATTCCGAACAGCCATGGACCATGGGGTGCTTTGCGCCGAGTTCTTTTAGACCGACAGAGTGAGTGCGCACAGCCGGCACGCAGTCAGAAAAATCAGCCGAGGAAAAAGAAGGCTACTAACCAAGCGTCGAAATCAGACCGCGCTCAGGCGCAGTCACTAGCTGCACTCAGGCCGTATTAAAGGATCGCGAGACGACTTTGAACGATTACTAGTGGTTAAGAAGGTGAGGTACTGATGCGGAAGTTTCGATATGCAGTATGGCATGCGTGTCCATTGAGAAGGTTGCTGTCTCACTGCAGACTTCTAGCTTCCGCCCAAAACAGCCAGTCCAGACTGTTGGTTCCACAGCCAAAAGAATGAGCAATGTGAATTATAATGGAGCGGCCTTGTGAGAGGAGAATTGTAAGGGCCTCGGTCAGCCCCGTAGCATGGAACAGCAGCCTAATAGGTTAGAAAAGGGAGTCGCAGTTCTTATAATGCGACCCAAGTAAAACTCAGGCTACACGGTGATAGCGAGTCCCAAACATATTTTCGCGAGTCCTTCCTCAAAAAGCACCAGAGTCCATGGGACGTGCCCGTGGATCTGGATAGACCAGTCTAGGTGTTGTATTCGCCATGGTATGTGAACTGTT', 'GGGCTCTAGTTTAACAGGCGGAGAATCATCTATGCGACGGACAACATAGATATGTCAGGGAACCAACGGGTTCCACTTTACGACCGGCGGTCCTAGACCACACCGAAATTCTGTTAAGCCGCGCTTCCATGGGATTAGTCGCTCGACCTCGCAAGCACCATGCCACGGTGTCCACCTCACTAATTTTCCTACCCAGTGGGAGGTTGCATAGGGCAAGCGCGCTATTTGTTAAGTGAGGAGTACCTTGTCTCAAAGCACACTGGCAGGTTTTATCTTATCGCCGACAGCCGCACAGAGATGATCCACGAGGCTGCTTGCGGCTGGTTTTCTTATGACGTCTGATCGAATGGGAAAGGCTATCAAGAAGGCCCAAGTATTAACGCAGAAAATTGGCGGGTCGCACAAAACGGAGGCTGGAGGACGGGTCTCATCTGCACTTTCTAACGGTACATCAGCCTAAGAAAGGCGCACCGAGAGCACTTGTAAGGACTACTTGGGCGTATGAATGTGTGCTCTAAATGAAGTAGTTCCGCAATGCCGGATGGCTTCTGGACTCTATGGCAGCCTTGCCTTATCAATACGGCCTTATTACTTGTGCCCAATACACGTACTTCAGAATTTCGGTAAGCTCGCCTCCCGATTTGGCAGTGGGAATTGCAACCGAACGGACTCGGAGTTAGAAAGTTATACGGGCGGTGCGCGGGAACGGCCGGACCCACACAGGAGCAGTAGCCACCGTAAAAGAGGTGAAGACATGGCTCTTCGCTCGCCGAAACACGAACATAGAACGTAGGCTACGCGACGAGTACATGCTTTCGAGAAAGAGCCTTTGTCGAGCATCATATGCCAGCGGAGGGCGCCGTAGAAACAGGGTGACAAGTGCCTGTGTTCCGTTCCCCTAGGAGTGTAACATGCA')
    print(res)
    

    